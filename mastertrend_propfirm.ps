//@version=5
strategy("MASTERTREND PropFirm", shorttitle="MT_PF", overlay=true, 
         initial_capital=10000, default_qty_type=strategy.percent_of_equity, 
         default_qty_value=1, commission_type=strategy.commission.percent, 
         commission_value=0.01, slippage=1)

// === PARAMÈTRES FIXES POUR PROP FIRMS ===
// SuperTrend (identique à l'original)
ST_PERIOD = 10
ST_MULTIPLIER = 3.0

// MACD Standard
MACD_FAST = 12
MACD_SLOW = 26
MACD_SIGNAL = 9

// Williams Fractals
WILLIAMS_LEFT = 2
WILLIAMS_RIGHT = 2
WILLIAMS_BUFFER = 0.0

// P1 Indicator
P1_E31 = 5
P1_M = 9
P1_L31 = 14

// StopGap Filter
SG_EMA_SHORT = 10
SG_EMA_LONG = 20
SG_LOOKBACK = 4
SG_MEDIAN_PERIOD = 10

// Prop Firm Risk Management
MAX_DAILY_LOSS = 2.0    // 2% daily loss limit
MAX_TOTAL_LOSS = 5.0    // 5% total drawdown limit
PROFIT_TARGET = 10.0    // 10% profit target
POSITION_RISK = 1.0     // 1% risk per trade

// Sessions
TRADING_START = 0930
TRADING_END = 1600

// === INDICATEURS PRINCIPAUX ===

// SuperTrend (reproduction exacte)
hl2_st = (high + low) / 2.0
atr_st = ta.atr(ST_PERIOD)
basic_up = hl2_st - ST_MULTIPLIER * atr_st
basic_dn = hl2_st + ST_MULTIPLIER * atr_st

var float final_up = na
var float final_dn = na
var int trend = 1

final_up := close[1] > nz(final_up[1]) ? math.max(basic_up, nz(final_up[1])) : basic_up
final_dn := close[1] < nz(final_dn[1]) ? math.min(basic_dn, nz(final_dn[1])) : basic_dn

trend := nz(trend[1], 1)
trend := trend == -1 and close > final_dn[1] ? 1 : trend == 1 and close < final_up[1] ? -1 : trend

// MACD Standard pour crossovers
[macd_line, signal_line, hist_line] = ta.macd(close, MACD_FAST, MACD_SLOW, MACD_SIGNAL)

// Williams Fractals (simplifiés)
f_isWilliamsFractal(left, right, type) =>
    if type == 'high'
        high[right] >= ta.highest(high, left + right + 1)
    else
        low[right] <= ta.lowest(low, left + right + 1)

isWilliamsHigh = f_isWilliamsFractal(WILLIAMS_LEFT, WILLIAMS_RIGHT, 'high')
isWilliamsLow = f_isWilliamsFractal(WILLIAMS_LEFT, WILLIAMS_RIGHT, 'low')

var float williams_long_stop = na
var float williams_short_stop = na
var bool williams_long_active = false
var bool williams_short_active = false

if isWilliamsLow
    williams_long_stop := low[WILLIAMS_RIGHT] * (1 - WILLIAMS_BUFFER / 100)
    williams_long_active := true

if isWilliamsHigh
    williams_short_stop := high[WILLIAMS_RIGHT] * (1 + WILLIAMS_BUFFER / 100)
    williams_short_active := true

// P1 Indicator (reproduction exacte)
hilow = (high - low) * 100
openclose = (close - open) * 100
spreadv = openclose * close

// Approximation du cumulative sum avec SMA
pt_approx = ta.sma(spreadv, 50)

ema_e31 = ta.ema(pt_approx, P1_E31)
ema_m = ta.ema(pt_approx, P1_M)
ema_l31 = ta.ema(pt_approx, P1_L31)

a1 = ema_l31 - ema_m
b1 = ema_e31 - ema_m
p1 = a1 + b1

// StopGap Filter
ema_short = ta.ema(close, SG_EMA_SHORT)
ema_long = ta.ema(close, SG_EMA_LONG)
highest_sg = ta.highest(high, SG_LOOKBACK)
lowest_sg = ta.lowest(low, SG_LOOKBACK)

trend_up = ema_short > ema_long
trend_down = ema_short < ema_long

candle_size = math.abs(high - low)
median_candle = ta.percentile_linear_interpolation(candle_size, SG_MEDIAN_PERIOD, 50)

stop_gap = 0.0
if trend_down and high < highest_sg[1]
    stop_gap := math.abs(highest_sg[1] - low)
else if trend_up and low > lowest_sg[1]
    stop_gap := math.abs(high - lowest_sg[1])

stopgap_ok = stop_gap > median_candle

// === CALCUL DES SIGNAUX (REPRODUCTION EXACTE) ===

// MACD Crossovers
crossmacdbear = ta.crossover(macd_line, 0)
crossmacd = ta.crossunder(macd_line, 0)

// P1 Conditions
b1_ge_p1 = b1 >= p1
b1_le_p1 = b1 <= p1

// Session de trading
timeFilter = time >= timestamp(year, month, dayofmonth, TRADING_START / 100, TRADING_START % 100) and 
             time <= timestamp(year, month, dayofmonth, TRADING_END / 100, TRADING_END % 100)

// === CONDITIONS EXACTES DU PINESCRIPT ORIGINAL ===

// longCondition = williamsLongStopPriceTrailPlotDisplay and crossmacdbear and (b1 >= p1) and (trend == 1) and (stopGap > med) and sessions
longCondition = williams_long_active and crossmacdbear and b1_ge_p1 and (trend == 1) and stopgap_ok and timeFilter

// shortCondition = williamsShortStopPriceTrailPlotDisplay and crossmacd and (b1 <= p1) and (trend == -1) and (stopGap > med) and sessions
shortCondition = williams_short_active and crossmacd and b1_le_p1 and (trend == -1) and stopgap_ok and timeFilter

// === PROP FIRM RISK MANAGEMENT ===

// Variables de suivi
var float initial_capital = strategy.initial_capital
var float daily_start_equity = strategy.initial_capital
var float peak_equity = strategy.initial_capital
var int current_day = dayofmonth

// Reset daily tracking
if current_day != dayofmonth
    current_day := dayofmonth
    daily_start_equity := strategy.equity

// Update peak
peak_equity := math.max(peak_equity, strategy.equity)

// Check limits
daily_pnl_pct = (strategy.equity - daily_start_equity) / initial_capital * 100
total_dd_pct = (peak_equity - strategy.equity) / peak_equity * 100
total_profit_pct = (strategy.equity - initial_capital) / initial_capital * 100

// Risk management flags
daily_loss_hit = daily_pnl_pct < -MAX_DAILY_LOSS
total_dd_hit = total_dd_pct > MAX_TOTAL_LOSS
profit_target_hit = total_profit_pct >= PROFIT_TARGET

// Stop trading if limits hit
risk_ok = not daily_loss_hit and not total_dd_hit and not profit_target_hit

// === EXÉCUTION DES TRADES ===

// Position sizing basé sur le risque
calculate_position_size() =>
    account_value = strategy.equity
    risk_amount = account_value * POSITION_RISK / 100
    
    stop_distance = 0.0
    if williams_long_stop and strategy.position_size == 0
        stop_distance := math.abs(close - williams_long_stop)
    else if williams_short_stop and strategy.position_size == 0
        stop_distance := math.abs(close - williams_short_stop)
    else
        stop_distance := close * 0.01  // 1% par défaut
    
    size = stop_distance > 0 ? risk_amount / stop_distance : 1
    math.max(1, size)

// Entrées
if longCondition and risk_ok and strategy.position_size == 0
    qty = calculate_position_size()
    strategy.entry("Long", strategy.long, qty=qty)
    alert("BUY " + syminfo.ticker, alert.freq_once_per_bar_close)

if shortCondition and risk_ok and strategy.position_size == 0
    qty = calculate_position_size()
    strategy.entry("Short", strategy.short, qty=qty)
    alert("SELL " + syminfo.ticker, alert.freq_once_per_bar_close)

// Sorties
if strategy.position_size > 0  // Position longue
    if williams_long_stop and low <= williams_long_stop
        strategy.close("Long", comment="Long Stop")
    else if crossmacd
        strategy.close("Long", comment="Long Exit Signal")

if strategy.position_size < 0  // Position courte
    if williams_short_stop and high >= williams_short_stop
        strategy.close("Short", comment="Short Stop")
    else if crossmacdbear
        strategy.close("Short", comment="Short Exit Signal")

// Fermeture forcée si limites atteintes
if not risk_ok and strategy.position_size != 0
    strategy.close_all(comment="Risk Limit")

// === AFFICHAGE ===

// SuperTrend
plot(trend == 1 ? final_up : na, color=color.green, linewidth=2, title="SuperTrend Up")
plot(trend == -1 ? final_dn : na, color=color.red, linewidth=2, title="SuperTrend Down")

// Williams Stops
plot(williams_long_active ? williams_long_stop : na, color=color.blue, style=plot.style_stepline, title="Williams Long Stop")
plot(williams_short_active ? williams_short_stop : na, color=color.orange, style=plot.style_stepline, title="Williams Short Stop")

// Signaux
plotshape(longCondition, title='Buy Signal', text='BUY', textcolor=color.white, 
          style=shape.labelup, location=location.belowbar, color=color.green, size=size.small)
plotshape(shortCondition, title='Sell Signal', text='SELL', textcolor=color.white, 
          style=shape.labeldown, location=location.abovebar, color=color.red, size=size.small)

// === TABLE DE SUIVI PROP FIRM ===
var table propFirmTable = table.new(position.top_right, 2, 6, bgcolor=color.new(color.black, 80), border_width=1)

if barstate.islast
    table.cell(propFirmTable, 0, 0, "PROP FIRM STATUS", text_color=color.white, bgcolor=color.blue)
    table.cell(propFirmTable, 1, 0, "", text_color=color.white, bgcolor=color.blue)
    
    table.cell(propFirmTable, 0, 1, "Capital", text_color=color.white)
    table.cell(propFirmTable, 1, 1, "$" + str.tostring(strategy.equity, "#,###"), text_color=color.white)
    
    table.cell(propFirmTable, 0, 2, "Profit", text_color=color.white)
    profit_color = total_profit_pct >= 0 ? color.green : color.red
    table.cell(propFirmTable, 1, 2, str.tostring(total_profit_pct, "#.##") + "%", text_color=profit_color)
    
    table.cell(propFirmTable, 0, 3, "Daily P&L", text_color=color.white)
    daily_color = daily_pnl_pct >= 0 ? color.green : color.red
    table.cell(propFirmTable, 1, 3, str.tostring(daily_pnl_pct, "#.##") + "%", text_color=daily_color)
    
    table.cell(propFirmTable, 0, 4, "Drawdown", text_color=color.white)
    dd_color = total_dd_pct <= MAX_TOTAL_LOSS ? color.green : color.red
    table.cell(propFirmTable, 1, 4, str.tostring(total_dd_pct, "#.##") + "%", text_color=dd_color)
    
    table.cell(propFirmTable, 0, 5, "Status", text_color=color.white)
    status_text = profit_target_hit ? "TARGET HIT!" : daily_loss_hit ? "DAILY LIMIT" : total_dd_hit ? "DD LIMIT" : "ACTIVE"
    status_color = profit_target_hit ? color.green : (daily_loss_hit or total_dd_hit) ? color.red : color.yellow
    table.cell(propFirmTable, 1, 5, status_text, text_color=status_color)

// Alertes conditionnelles
alertcondition(longCondition, title='BULL Signal', message="BUY {{ticker}} - MasterTrend PropFirm")
alertcondition(shortCondition, title='BEAR Signal', message="SELL {{ticker}} - MasterTrend PropFirm")
alertcondition(profit_target_hit, title='Profit Target Hit', message="PROFIT TARGET REACHED - {{ticker}}")
alertcondition(daily_loss_hit, title='Daily Loss Limit', message="DAILY LOSS LIMIT HIT - {{ticker}}")
alertcondition(total_dd_hit, title='Drawdown Limit', message="TOTAL DRAWDOWN LIMIT HIT - {{ticker}}") 